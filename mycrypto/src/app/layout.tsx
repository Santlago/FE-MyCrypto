import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import Script from "next/script";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <head>
        {/* Metadata can be handled globally here */}
      </head>
      <body>
        <Script
          id="custom-tracking"
          strategy="beforeInteractive" // or "lazyOnload" based on when you want it to load
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                let clicks = 0;
                let screenTime = 0;

                // Track number of clicks
                document.addEventListener('click', function() {
                  clicks++;
                  console.log('Clicks:', clicks);
                });

                // Track screen time
                setInterval(function() {
                  screenTime++;
                  console.log('Screen time in seconds:', screenTime);
                }, 1000);


                // Send data to the backend
                function sendData() {
                  const data = {
                    clicks: clicks,
                    screenTime: screenTime
                  };
                  fetch('http://localhost:8080/', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                  }).then(response => console.log('Data sent', response));
                }

                // Send data when leaving the page
                window.addEventListener('beforeunload', sendData);
              })();
            `,
          }}
        />
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
